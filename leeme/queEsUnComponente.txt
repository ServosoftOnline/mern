- Un componente:

    - Es una parte de la aplicacion. Puede ser una clase, una función, .... que renderizará algo en pantalla
    - los importo mediante import donde lo requiera y lo exporto al declararlo

    - Tienen la estructura de una función: 

        - Contiene una parte donde puedo ejecutar javascript y otra que renderiza instrucciones jsx
            - Las instrucciones jsx:
                - son un conjunto de instrucciones html y javascript
                - El codigo de javascript iría entre llaves {}        
                - Deben estar embueltas al menos por un fragmento o un div
                - En lugar de class se usa classname

    - Pueden pasarse datos entre ellos
        - mediante el objeto props o destructurando las propiedades en variables        
        - Pueden acompañar estas variables pasadas a variables propias del componente destino
        - Vease los datos pasados acompañando a variables del componente en tercerComponente.jsx del proyecto 01-primeros-pasos
        

    - Pueden validarse los datos pasados usando prop-types
        - Instalación: npm install prop-types
        - La validación debe estar fuera del componente. Al final del archivo.
        - Las validaciones se mostrarán
        - Documentación: https://legacy.reactjs.org/docs/typechecking-with-proptypes.html
        
        - POR AHORA NO ME MUESTRA LAS ADVERTENCIAS EN EL NAVEGADOR Y NO SE PORQUE
        - ESTUBE INDAGANDO Y PROBANDO MUCHO TIEMPO Y AVERIGUE QUE REACT ESTA ELIMINANDO EL USO DE PROPTYPES
        
    - Alternativa al uso de propTypes el typeof. Ejemplo:
        if (typeof nombre !== "string") {
            throw new Error("⚠️ Error en componente: 'nombre' debe ser un string.");
        }
        - Para el typeofdefault le añado los valores sin fueran undefined
        - Valido los datos usando typeof en tercerComponente.jsx del proyecto 01-primeros-pasos
        
